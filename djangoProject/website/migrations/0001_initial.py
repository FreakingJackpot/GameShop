# Generated by Django 5.1.5 on 2025-01-21 17:04

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Concurrent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.TextField(
                        help_text="Два типа названий: <Имя> - самостоятельный конкурент, <Маркетплейс>.<Имя> - продавец с маркетплейса ",
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Developer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(unique=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Distributor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(unique=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Publisher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(unique=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SteamGame",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "steam_id",
                    models.IntegerField(unique=True, verbose_name="Id в Steam"),
                ),
                ("name", models.TextField(verbose_name="Имя")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Game",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(verbose_name="Имя")),
                ("description", models.TextField()),
                ("release_date", models.DateField()),
                ("requirements", models.TextField()),
                ("price", models.DecimalField(decimal_places=2, max_digits=7)),
                (
                    "discount_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=7, null=True
                    ),
                ),
                ("categories", models.ManyToManyField(to="website.category")),
                ("developers", models.ManyToManyField(to="website.developer")),
                ("genres", models.ManyToManyField(to="website.genre")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GameImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("url", models.TextField(unique=True)),
                ("is_header", models.BooleanField(default=False)),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="website.game"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Incoming",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(verbose_name="Дата отгрузки")),
                ("count", models.IntegerField(verbose_name="Число ключей")),
                (
                    "distributor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="website.distributor",
                    ),
                ),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="website.game"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Key",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.TextField(verbose_name="Ключ")),
                ("is_sold", models.BooleanField(default=False)),
                (
                    "incoming",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="website.incoming",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PriceRules",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(verbose_name="Имя")),
                ("priority", models.IntegerField()),
                (
                    "release_date_lower",
                    models.DateField(verbose_name="Дата выхода меньше чем"),
                ),
                (
                    "upper_price_border",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=7,
                        null=True,
                        verbose_name="Верхняя граница цены",
                    ),
                ),
                (
                    "lower_price_border",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=7,
                        null=True,
                        verbose_name="Нижняя граница цены",
                    ),
                ),
                ("discount_percent", models.FloatField()),
                ("starts", models.DateTimeField()),
                ("ends", models.DateTimeField()),
                (
                    "categories",
                    models.ManyToManyField(
                        related_name="categories", to="website.category"
                    ),
                ),
                (
                    "developers",
                    models.ManyToManyField(
                        related_name="developers", to="website.developer"
                    ),
                ),
                (
                    "genres",
                    models.ManyToManyField(related_name="genres", to="website.genre"),
                ),
                (
                    "publishers",
                    models.ManyToManyField(
                        related_name="publishers", to="website.publisher"
                    ),
                ),
                (
                    "steam_apps",
                    models.ManyToManyField(
                        help_text="Steam Id игр, правило применяется ко всем играм, указанных здесь. Другие ограничения не учитываются",
                        related_name="steam_apps",
                        to="website.steamgame",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="game",
            name="applied_rule",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="website.pricerules",
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="publishers",
            field=models.ManyToManyField(to="website.publisher"),
        ),
        migrations.AddField(
            model_name="game",
            name="steam",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to="website.steamgame"
            ),
        ),
        migrations.CreateModel(
            name="ConcurrentPrice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=7)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_lower_price", models.BooleanField(default=False)),
                (
                    "concurrent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="website.concurrent",
                    ),
                ),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="website.game"
                    ),
                ),
            ],
            options={
                "unique_together": {("concurrent", "game")},
            },
        ),
    ]
